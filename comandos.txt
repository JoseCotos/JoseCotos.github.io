COMANDOS GIT
============
git init
git config --list
git config --list --show-origin
git config --global user.name "Jose Cotos"
git config --global user.email "josecotos@gmail.com"
git status
git add nombreArchivo
git add .
git rm --cached nombreArchivo
git commit -m "mensaje"
git commit -am "mensaje<no necesita git add .>"
git log
git log nombreArchivo
git log --stat
git show
git reset idCommit --hard
git reset idCommit --soft
git diff idCommit1 idCommit2
git branch nombreRama
git checkout nombreRama
git checkout idCommit
git merge nombreRama
git remote add origin https://github.com/JoseCotos/hyperblog.git
git remote
git remote -v
git pull origin master
git pull origin master --allow-unrelated-histories
git push origin master


GitHub
======
user: josecotos
Correo: josecotos@gmail.com
Clave: Jc40041899

ssh-keygen -t rsa -b 4096 -C "josecotos@gmail.com"
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa
-- copiar llave publica a github
git pull origin master
-- yes
git push origin master

git log --all --graph --decorate --oneline
alias arbolito="git log --all --graph --decorate --oneline"
arbolito

git tag -a v0.1 -m "Resultado de las primeras clases del curso" f306af3
git tag
git show-ref --tags

git pull origin master
git push origin --tags

git tag -d dormido
git tag
git pull origin master
git push origin --tags
git push origin :refs/tags/dormido

git show-branch
git show-branch --all

git clone URL

-- para actualizar un folk
git remote add upstream URL
git remote -v
git pull upstream master
git status
git pull origin master
git push origin master

-- hacer cambios en el proyecto
git stash (guarda temporalmente lo que se cambio y vuelve a su estado original)
git stash list
git checkout footer
git checkout master
git stash pop
git stash drop (elimina stash)
git stash branch experimento

git clean --dry-run (lista lo que se va a eliminar)
git clean -f (elimina archivos)



